import asyncio
import math
import os

import heroku3
import requests
import urllib3
from datetime import datetime

from PIL import Image
from telegraph import Telegraph, exceptions, upload_file
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)
from telethon.tl.functions.users import GetFullUserRequest
from telethon.tl.types import MessageEntityMentionName
Heroku = heroku3.from_key(Config.HEROKU_API_KEY)
heroku_api = "https://api.heroku.com"
HEROKU_APP_NAME = Config.HEROKU_APP_NAME
HEROKU_API_KEY = Config.HEROKU_API_KEY
from . import BOTLOG_CHATID, mention, jmthon
from userbot.utils import admin_cmd, sudo_cmd
from userbot import LOGS, bot as jmthon

telegraph = Telegraph()
r = telegraph.create_account(short_name=Config.TELEGRAPH_SHORT_NAME)
auth_url = r["auth_url"]


jepthonnn = (
    "๐ฉ [JEPTHON VARS - ุงูุงููุฑ ุงูููุงุฑุงุช](t.me/jepthon) ๐ช\n\n"
    "โชผ `.ุงุถู ุตูุฑุฉ ุงูุญูุงูุฉ` ุจุงููุฑุฏ ุน ุตููุฑุฉ ุงู ููุฏููุง\n\n"
    "โชผ `.ุงุถู ุตูุฑุฉ ุงูููุชู` ุจุงููุฑุฏ ุน ุตููุฑุฉ ุงู ููุฏููุง\n\n"
    "โชผ `.ุงูุงูุฑ ุงููุงุฑุงุช` ูุนูุฑุถ ุจูููุฉ ุงูุงููุฑ ุงูููุงุฑุงุช\n\n\n"
    "**โพโูุงุฆููู ุงูุงูุฑ ุชุบูููุฑ ุจูููุฉ ุงูููุงุฑุงุช ุจุฃููุฑ ูุงุญูุฏ ูููุท :** \n\n"
    "โชผ `.ุงุถู ูููุดุฉ ุงูุญูุงูุฉ` ุจุงููุฑุฏ ุน ุงููููุดูุฉ\n\n"
    "โชผ `.ุงุถู ูููุดุฉ ุงููุญุต` ุจุงููุฑุฏ ุน ุงููููุดูุฉ\n\n"
    "โชผ `.ุงุถู ุฑูุฒ ุงูููุชู` ุจุงููุฑุฏ ุน ุฑููุฒ\n\n"
    "โชผ `.ุงุถู ุฒุฎุฑูุฉ ุงูููุชู` ุจุงููุฑุฏ ุน ุงุฑููุงู ุงูุฒุบูุฑูู\n\n"
    "โชผ `.ุงุถู ุงูุจุงูู ุงูููุชู` ุจุงููุฑุฏ ุน ุงูุจูุงููู\n\n"
    "โชผ `.ุงุถู ุงุณู ุงููุณุชุฎุฏู` ุจุงููุฑุฏ ุน ุงุณูู\n\n"
    "โชผ `.ุงุถู ูุฑูุจ ุงูุฑุณุงุฆู` ุจุงููุฑุฏ ุน ุงูุฏู ุงูููุฑูุจ\n\n"
    "โชผ `.ุงุถู ูุฑูุจ ุงูุณุฌู` ุจุงููุฑุฏ ุน ุงูุฏู ุงูููุฑูุจ\n\n"
    "โชผ `.ุงุถู ุฑุณุงุฆู ุงูุญูุงูุฉ` ุจุงููุฑุฏ ุน ุฑููู ูุนุฏุฏ ุฑุณุงุฆู ุญูุงูุฉ ุงูุฎุงุต\n\n\n"
    "โชผ `.ุฌูุจ` + ุงุณูู ุงูููุงุฑ\n\n"
    "โชผ `.ุญุฐู` + ุงุณูู ุงูููุงุฑ\n\n"
    "\n๐ฉ [ุงูุณูุฏ ุญุณูู ุนูู](t.me/lMl10l) ๐ช"
)


# Copyright (C) 2022 jepthon . All Rights Reserved
@jmthon.on(admin_cmd(pattern=r"ุงุถู (.*)"))
@jmthon.on(sudo_cmd(pattern=r"ุงุถู (.*)", allow_sudo=True))
async def variable(event):
    if Config.HEROKU_API_KEY is None:
        return await edit(
            event,
            "โพโุงุถุจุท Var ุงููุทููุจ ูู Heroku ุนูู ูุธููุฉ ูุฐุง ุจุดูู ุทุจูุนู `HEROKU_API_KEY` ุงุฐุง ููุช ูุงุชุนูู ุงูู ููุฌุฏ ููุท ุงุฐูุจ ุงูู ุญุณุงุจู ูู ููุฑููู ุซู ุงูู ุงูุงุนุฏุงุฏุงุช ุณุชุฌุฏู ุจุงูุงุณูู ุงูุณุฎู ูุฏุฎูู ูู ุงููุงุฑ. ",
        )
    if Config.HEROKU_APP_NAME is not None:
        app = Heroku.app(Config.HEROKU_APP_NAME)
    else:
        return await ed(
            event,
            "โพโุงุถุจุท Var ุงููุทููุจ ูู Heroku ุนูู ูุธููุฉ ูุฐุง ุจุดูู ุทุจูุนู `HEROKU_APP_NAME` ุงุณู ุงูุชุทุจูู ุงุฐุง ููุช ูุงุชุนูู.",
        )
    input_str = event.pattern_match.group(1)
    reply = await event.get_reply_message()
    vinfo = reply.text
    heroku_var = app.config()
    jep = await edit_or_reply(event, "**โพโุฌูุงุฑู ุงุถูุงูุฉ ุงูููุงุฑ ุงููู ุจููุชู ...**")
    if input_str == "ูููุดุฉ ุงููุญุต" or input_str == "ูููุดู ุงููุญุต":
        variable = "ALIVE_TEMPLATE"
        await asyncio.sleep(1.5)
        if variable in heroku_var:
            await jep.edit("**โพโุชู ุชุบูููุฑ {} ุจูุฌูุงุญ โ๏ธ**\n**โพโุงููุชุบูุฑ : โถ**\n `{}` \n**โพโูุชู ุงูุงู ุงุนูุงุฏุฉ ุชุดุบููู ุจููุช ุฌูุจุซูู ูุณุชุบูุฑู ุงูุงูุฑ 2-1 ุฏููููู ...**".format(input_str, vinfo))
        else:
            await jep.edit("**โพโุชู ุงุถุงููุฉ {} ุจูุฌูุงุญ โ๏ธ** \n**โพโุงููุถุงู ุงููู :**\n `{}` \n**โพโูุชู ุงูุงู ุงุนูุงุฏุฉ ุชุดุบููู ุจููุช ุฌูุจุซูู ูุณุชุบูุฑู ุงูุงูุฑ 2-1 ุฏููููู ...**".format(input_str, vinfo))
        heroku_var[variable] = vinfo
    elif input_str == "ูููุดุฉ ุงูุญูุงูุฉ" or input_str == "ูููุดู ุงูุญูุงูู":
        variable = "PM_TEXT"
        await asyncio.sleep(1.5)
        if variable in heroku_var:
            await jep.edit("**โพโุชู ุชุบูููุฑ {} ุจูุฌูุงุญ โ๏ธ**\n**โพโุงููุชุบูุฑ : โถ**\n `{}` \n**โพโูุชู ุงูุงู ุงุนูุงุฏุฉ ุชุดุบููู ุจููุช ุฌูุจุซูู ูุณุชุบูุฑู ุงูุงูุฑ 2-1 ุฏููููู  ...**".format(input_str, vinfo))
        else:
            await jep.edit("**โพโุชู ุงุถุงููุฉ {} ุจูุฌูุงุญ โ๏ธ** \n**โพโุงููุถุงู ุงููู :**\n `{}` \n**โพโูุชู ุงูุงู ุงุนูุงุฏุฉ ุชุดุบููู ุจููุช ุฌูุจุซูู ูุณุชุบูุฑู ุงูุงูุฑ 2-1 ุฏููููู  ...**".format(input_str, vinfo))
        heroku_var[variable] = vinfo
    elif input_str == "ุฑูุฒ ุงูููุชู" or input_str == "ุฑูุฒ ุงูุงุณู ุงูููุชู":
        variable = "TIME_JEP"
        await asyncio.sleep(1.5)
        if variable in heroku_var:
            await jep.edit("**โพโุชู ุชุบูููุฑ {} ุจูุฌูุงุญ โ๏ธ**\n**โพโุงููุชุบููุฑ : โถ**\n `{}` \n**โพโูุชู ุงูุงู ุงุนูุงุฏุฉ ุชุดุบููู ุจููุช ุฌูุจุซูู ูุณุชุบูุฑู ุงูุงูุฑ 2-1 ุฏููููู ...**".format(input_str, vinfo))
        else:
            await jep.edit("**โพโุชู ุงุถุงููุฉ {} ุจูุฌูุงุญ โ๏ธ** \n**โพโุงููุถุงู ุงููู :**\n `{}` \n**โพโูุชู ุงูุงู ุงุนูุงุฏุฉ ุชุดุบููู ุจููุช ุฌูุจุซูู ูุณุชุบูุฑู ุงูุงูุฑ 2-1 ุฏููููู ...**".format(input_str, vinfo))
        heroku_var[variable] = vinfo
    elif input_str == "ุฒุฎุฑูู ุงูููุชู" or input_str == "ุฒุฎุฑูุฉ ุงูููุชู":
        variable = "JP_FN"
        await asyncio.sleep(1.5)
        if variable in heroku_var:
            await jep.edit("**โพโุชู ุชุบูููุฑ {} ุจูุฌูุงุญ โ๏ธ**\n**โพโุงููุชุบููุฑ : โถ**\n `{}` \n**โพโูุชู ุงูุงู ุงุนูุงุฏุฉ ุชุดุบููู ุจููุช ุฌูุจุซูู ูุณุชุบูุฑู ุงูุงูุฑ 2-1 ุฏููููู ...**".format(input_str, vinfo))
        else:
            await jep.edit("**โพโุชู ุงุถุงููุฉ {} ุจูุฌูุงุญ โ๏ธ** \n**โพโุงููุถุงู ุงููู :**\n `{}` \n**โพโูุชู ุงูุงู ุงุนูุงุฏุฉ ุชุดุบููู ุจููุช ุฌูุจุซูู ูุณุชุบูุฑู ุงูุงูุฑ 2-1 ุฏููููู ...**".format(input_str, vinfo))
        heroku_var[variable] = vinfo
    elif input_str == "ุงูููุช" or input_str == "ุงูุณุงุนู":
        variable = "TZ"
        await asyncio.sleep(1.5)
        if variable in heroku_var:
            await jep.edit("**โพโุชู ุชุบููุฑ ุงูููุทููุฉ ุงูุฒููููู**\n **โพโุงููุชุบูุฑ : ุฏูููุฉ ูุตูุฑ ๐ช๐ฌ**\n\n**โพโูุชู ุงูุงู ุงุนูุงุฏุฉ ุชุดุบููู ุจููุช ุฌูุจุซูู ูุณุชุบูุฑู ุงูุงูุฑ 2-1 ุฏููููู ...**")
        else:
            await jep.edit("**โพโุชู ุงุนูุงุฏุฉ ุชุบููุฑ ุงูููุทููุฉ ุงูุฒููููู**\n **โพโุงููุชุบูุฑ : ุฏูููุฉ ูุตูุฑ ๐ช๐ฌ**\n\n**โพโูุชู ุงูุงู ุงุนูุงุฏุฉ ุชุดุบููู ุจููุช ุฌูุจุซูู ูุณุชุบูุฑู ุงูุงูุฑ 2-1 ุฏููููู ...**")
        heroku_var[variable] = vinfo
    elif input_str == "ุงูุจุงูู" or input_str == "ุงูุจุงูู ุงูููุชู" or input_str == "ุงููุจุฐู":
        variable = "DEFAULT_BIO"
        await asyncio.sleep(1.5)
        if variable in heroku_var:
            await jep.edit("**โพโุชู ุชุบูููุฑ {} ุจูุฌูุงุญ โ๏ธ**\n**โพโุงููุชุบููุฑ : โถ**\n `{}` \n**โพโูุชู ุงูุงู ุงุนูุงุฏุฉ ุชุดุบููู ุจููุช ุฌูุจุซูู ูุณุชุบูุฑู ุงูุงูุฑ 2-1 ุฏููููู ...**".format(input_str, vinfo))
        else:
            await jep.edit("**โพโุชู ุงุถุงููุฉ {} ุจูุฌูุงุญ โ๏ธ** \n**โพโุงููุถุงู ุงููู :**\n `{}` \n**โพโูุชู ุงูุงู ุงุนูุงุฏุฉ ุชุดุบููู ุจููุช ุฌูุจุซูู ูุณุชุบูุฑู ุงูุงูุฑ 2-1 ุฏููููู ...**".format(input_str, vinfo))
        heroku_var[variable] = vinfo
    elif input_str == "ุงุณู ุงููุณุชุฎุฏู" or input_str == "ุงูุงุณู":
        variable = "ALIVE_NAME"
        await asyncio.sleep(1.5)
        if variable in heroku_var:
            await jep.edit("**โพโุชู ุชุบูููุฑ {} ุจูุฌูุงุญ โ๏ธ**\n**โพโุงููุชุบููุฑ : โถ**\n `{}` \n**โพโูุชู ุงูุงู ุงุนูุงุฏุฉ ุชุดุบููู ุจููุช ุฌูุจุซูู ูุณุชุบูุฑู ุงูุงูุฑ 2-1 ุฏููููู ...**".format(input_str, vinfo))
        else:
            await jep.edit("**โพโุชู ุงุถุงููุฉ {} ุจูุฌูุงุญ โ๏ธ** \n**โพโุงููุถุงู ุงููู :**\n `{}` \n**โพโูุชู ุงูุงู ุงุนูุงุฏุฉ ุชุดุบููู ุจููุช ุฌูุจุซูู ูุณุชุบูุฑู ุงูุงูุฑ 2-1 ุฏููููู ...**".format(input_str, vinfo))
        heroku_var[variable] = vinfo
    elif input_str == "ูุฑูุจ ุงูุฑุณุงุฆู" or input_str == "ูุฑูุจ ุงูุชุฎุฒูู" or input_str == "ูุฑูุจ ุงูุฎุงุต":
        variable = "PM_LOGGER_GROUP_ID"
        await asyncio.sleep(1.5)
        if variable in heroku_var:
            await jep.edit("**โพโุชู ุชุบูููุฑ {} ุจูุฌูุงุญ โ๏ธ**\n**โพโุงููุชุบููุฑ : โถ**\n `{}` \n**โพโูุชู ุงูุงู ุงุนูุงุฏุฉ ุชุดุบููู ุจููุช ุฌูุจุซูู ูุณุชุบูุฑู ุงูุงูุฑ 2-1 ุฏููููู ...**".format(input_str, vinfo))
        else:
            await jep.edit("**โพโุชู ุงุถุงููุฉ {} ุจูุฌูุงุญ โ๏ธ** \n**โพโุงููุถุงู ุงููู :**\n `{}` \n**โพโูุชู ุงูุงู ุงุนูุงุฏุฉ ุชุดุบููู ุจููุช ุฌูุจุซูู ูุณุชุบูุฑู ุงูุงูุฑ 2-1 ุฏููููู ...**".format(input_str, vinfo))
        heroku_var[variable] = vinfo
    elif input_str == "ุงูุณุฌู" or input_str == "ูุฑูุจ ุงูุณุฌู":
        variable = "PRIVATE_GROUP_BOT_API_ID"
        await asyncio.sleep(1.5)
        if variable in heroku_var:
            await jep.edit("**โพโุชู ุชุบูููุฑ {} ุจูุฌูุงุญ โ๏ธ**\n**โพโุงููุชุบููุฑ : โถ**\n `{}` \n**โพโูุชู ุงูุงู ุงุนูุงุฏุฉ ุชุดุบููู ุจููุช ุฌูุจุซูู ูุณุชุบูุฑู ุงูุงูุฑ 2-1 ุฏููููู ...**".format(input_str, vinfo))
        else:
            await jep.edit("**โพโุชู ุงุถุงููุฉ {} ุจูุฌูุงุญ โ๏ธ** \n**โพโุงููุถุงู ุงููู :**\n `{}` \n**โพโูุชู ุงูุงู ุงุนูุงุฏุฉ ุชุดุบููู ุจููุช ุฌูุจุซูู ูุณุชุบูุฑู ุงูุงูุฑ 2-1 ุฏููููู ...**".format(input_str, vinfo))
        heroku_var[variable] = vinfo
    elif input_str == "ููุทุฉ ุงูุงูุงูุฑ" or input_str == "ููุทู ุงูุงูุงูุฑ":
        variable = "COMMAND_HAND_LER"
        await asyncio.sleep(1.5)
        if variable in heroku_var:
            await jep.edit("**โพโุชู ุชุบูููุฑ {} ุจูุฌูุงุญ โ๏ธ**\n**โพโุงููุชุบููุฑ : โถ**\n `{}` \n**โพโูุชู ุงูุงู ุงุนูุงุฏุฉ ุชุดุบููู ุจููุช ุฌูุจุซูู ูุณุชุบูุฑู ุงูุงูุฑ 2-1 ุฏููููู ...**".format(input_str, vinfo))
        else:
            await jep.edit("**โพโุชู ุงุถุงููุฉ {} ุจูุฌูุงุญ โ๏ธ** \n**โพโุงููุถุงู ุงููู :**\n `{}` \n**โพโูุชู ุงูุงู ุงุนูุงุฏุฉ ุชุดุบููู ุจููุช ุฌูุจุซูู ูุณุชุบูุฑู ุงูุงูุฑ 2-1 ุฏููููู ...**".format(input_str, vinfo))
        heroku_var[variable] = vinfo
    elif input_str == "ุงูุชููู" or input_str == "ุชููู ุงูุจูุช":
        variable = "TG_BOT_TOKEN"
        await asyncio.sleep(1.5)
        if variable in heroku_var:
            await jep.edit("**โพโุชู ุชุบูููุฑ {} ุจูุฌูุงุญ โ๏ธ**\n**โพโุงููุชุบููุฑ : โถ**\n `{}` \n**โพโูุชู ุงูุงู ุงุนูุงุฏุฉ ุชุดุบููู ุจููุช ุฌูุจุซูู ูุณุชุบูุฑู ุงูุงูุฑ 2-1 ุฏููููู ...**".format(input_str, vinfo))
        else:
            await jep.edit("**โพโุชู ุงุถุงููุฉ {} ุจูุฌูุงุญ โ๏ธ** \n**โพโุงููุถุงู ุงููู :**\n `{}` \n**โพโูุชู ุงูุงู ุงุนูุงุฏุฉ ุชุดุบููู ุจููุช ุฌูุจุซูู ูุณุชุบูุฑู ุงูุงูุฑ 2-1 ุฏููููู ...**".format(input_str, vinfo))
        heroku_var[variable] = vinfo
    elif input_str == "ูุนุฑู ุงูุจูุช" or input_str == "ูุนุฑู ุจูุช":
        variable = "TG_BOT_USERNAME"
        await asyncio.sleep(1.5)
        if variable in heroku_var:
            await jep.edit("**โพโุชู ุชุบูููุฑ {} ุจูุฌูุงุญ โ๏ธ**\n**โพโุงููุชุบููุฑ : โถ**\n `{}` \n**โพโูุชู ุงูุงู ุงุนูุงุฏุฉ ุชุดุบููู ุจููุช ุฌูุจุซูู ูุณุชุบูุฑู ุงูุงูุฑ 2-1 ุฏููููู โฌโญ ...**".format(input_str, vinfo))
        else:
            await jep.edit("**โพโุชู ุงุถุงููุฉ {} ุจูุฌูุงุญ โ๏ธ** \n**โพโุงููุถุงู ุงููู :**\n `{}` \n**โพโูุชู ุงูุงู ุงุนูุงุฏุฉ ุชุดุบููู ุจููุช ุฌูุจุซูู ูุณุชุบูุฑู ุงูุงูุฑ 2-1 ุฏููููู โฌโญ ...**".format(input_str, vinfo))
        heroku_var[variable] = vinfo
    elif input_str == "ุงูุฑูุจู" or input_str == "ุงูุณูุฑุณ":
        variable = "UPSTREAM_REPO"
        await asyncio.sleep(1.5)
        if variable in heroku_var:
            await jep.edit("**โพโุชู ุชุบูููุฑ {} ุจูุฌูุงุญ โ๏ธ**\n**โพโุงููุชุบููุฑ : โถ**\n `{}` \n**โพโูุชู ุงูุงู ุงุนูุงุฏุฉ ุชุดุบููู ุจููุช ุฌูุจุซูู ูุณุชุบูุฑู ุงูุงูุฑ 2-1 ุฏููููู โฌโญ ...**".format(input_str, vinfo))
        else:
            await jep.edit("**โพโุชู ุงุถุงููุฉ {} ุจูุฌูุงุญ โ๏ธ** \n**โพโุงููุถุงู ุงููู :**\n `{}` \n**โพโูุชู ุงูุงู ุงุนูุงุฏุฉ ุชุดุบููู ุจููุช ุฌูุจุซูู ูุณุชุบูุฑู ุงูุงูุฑ 2-1 ุฏููููู โฌโญ ...**".format(input_str, vinfo))
        heroku_var[variable] = vinfo
    elif input_str == "ุงุณูู ุงูุชููุงุฆู" or input_str == "ุงูุงุณู ุงูุชููุงุงุฆู":
        variable = "AUTONAME"
        await asyncio.sleep(1.5)
        if variable in heroku_var:
            await jep.edit("**โพโุชู ุชุบูููุฑ {} ุจูุฌูุงุญ โ๏ธ**\n**โพโุงููุชุบููุฑ : โถ**\n `{}` \n**โพโูุชู ุงูุงู ุงุนูุงุฏุฉ ุชุดุบููู ุจููุช ุฌูุจุซูู ูุณุชุบูุฑู ุงูุงูุฑ 2-1 ุฏููููู โฌโญ ...**".format(input_str, vinfo))
        else:
            await jep.edit("**โพโุชู ุงุถุงููุฉ {} ุจูุฌูุงุญ โ๏ธ** \n**โพโุงููุถุงู ุงููู :**\n `{}` \n**โพโูุชู ุงูุงู ุงุนูุงุฏุฉ ุชุดุบููู ุจููุช ุฌูุจุซูู ูุณุชุบูุฑู ุงูุงูุฑ 2-1 ุฏููููู โฌโญ ...**".format(input_str, vinfo))
        heroku_var[variable] = vinfo
    elif input_str == "ุฑุณุงุฆู ุงูุญูุงูุฉ" or input_str == "ุฑุณุงุฆู ุงูุญูุงูู" or input_str == "ุฑุณุงุฆู ุงูุฎุงุต" or input_str == "ุฑุณุงุฆู ุญูุงูุฉ ุงูุฎุงุต":
        variable = "MAX_FLOOD_IN_PMS"
        await asyncio.sleep(1.5)
        if variable in heroku_var:
            await jep.edit("**โพโุชู ุชุบูููุฑ {} ุจูุฌูุงุญ โ๏ธ**\n**โพโุงููุชุบููุฑ : โถ**\n `{}` \n**โพโูุชู ุงูุงู ุงุนูุงุฏุฉ ุชุดุบููู ุจููุช ุฌูุจุซูู ูุณุชุบูุฑู ุงูุงูุฑ 2-1 ุฏููููู โฌโญ ...**".format(input_str, vinfo))
        else:
            await jep.edit("**โพโุชู ุงุถุงููุฉ {} ุจูุฌูุงุญ โ๏ธ** \n**โพโุงููุถุงู ุงููู :**\n `{}` \n**โพโูุชู ุงูุงู ุงุนูุงุฏุฉ ุชุดุบููู ุจููุช ุฌูุจุซูู ูุณุชุบูุฑู ุงูุงูุฑ 2-1 ุฏููููู โฌโญ ...**".format(input_str, vinfo))
        heroku_var[variable] = vinfo
    else:
        if input_str:
            return await jep.edit("**โพโุนูุฐุฑุงู .. ูุงููุฌูุฏ ููุงูู ููุงุฑ ุจุฅุณูู {} ุ!..**".format(input_str))

        return await edit_or_reply(event, "**โพโุนูุฐุฑุงู .. ูุงููุฌูุฏ ููุงูู ููุงุฑ ุจุฅุณูู {} ุ!..**".format(input_str))


# Copyright (C) 2022 jepthon . All Rights Reserved
@jmthon.on(admin_cmd(pattern="ุญุฐู(?:\s|$)([\s\S]*)"))
@jmthon.on(sudo_cmd(pattern="ุญุฐู(?:\s|$)([\s\S]*)", allow_sudo=True))
async def variable(event):
    if Config.HEROKU_API_KEY is None:
        return await edit(
            event,
            "โพโุงุถุจุท Var ุงููุทููุจ ูู Heroku ุนูู ูุธููุฉ ูุฐุง ุจุดูู ุทุจูุนู `HEROKU_API_KEY` ุงุฐุง ููุช ูุงุชุนูู ุงูู ููุฌุฏ ููุท ุงุฐูุจ ุงูู ุญุณุงุจู ูู ููุฑููู ุซู ุงูู ุงูุงุนุฏุงุฏุงุช ุณุชุฌุฏู ุจุงูุงุณูู ุงูุณุฎู ูุฏุฎูู ูู ุงููุงุฑ. ",
        )
    if Config.HEROKU_APP_NAME is not None:
        app = Heroku.app(Config.HEROKU_APP_NAME)
    else:
        return await edit(
            event,
            "โพโุงุถุจุท Var ุงููุทููุจ ูู Heroku ุนูู ูุธููุฉ ูุฐุง ุจุดูู ุทุจูุนู `HEROKU_APP_NAME` ุงุณู ุงูุชุทุจูู ุงุฐุง ููุช ูุงุชุนูู.",
        )
    input_str = event.text[5:]
    heroku_var = app.config()
    jep = await edit_or_reply(event, "**โพโุฌูุงุฑู ุญูุฐู ุงูููุงุฑ ููู ุจููุชู ๐ฎ...**")
    # All Rights Reserved for "Zedthon - UserBot" "ุฒููุฒุงู ุงูููุจูู"
    if input_str == "ูููุดุฉ ุงููุญุต" or input_str == "ูููุดู ุงููุญุต":
        variable = "ALIVE_TEMPLATE"
        await asyncio.sleep(1.5)
        if variable not in heroku_var:
        	return await jep.edit("**โพโุนูุฐุฑุงู .. ููุงุฑ {} ุบูุฑ ููุฌูุฏ ุงุตููุงู...**".format(input_str))

        await jep.edit("**โพโุชู ุญูุฐู {} ุจูุฌูุงุญ โ๏ธ**\n**โพโุงููุชุบููุฑ ุงููุญูุฐูู : โถ**\n `{}` \n**โพโูุชู ุงูุงู ุงุนูุงุฏุฉ ุชุดุบููู ุจููุช ุฌูุจุซูู ูุณุชุบูุฑู ุงูุงูุฑ 2-1 ุฏููููู โฌโญ ...**".format(input_str, heroku_var[variable]))
        del heroku_var[variable]

    elif input_str == "ูููุดุฉ ุงูุญูุงูุฉ" or input_str == "ูููุดู ุงูุญูุงูู":
        variable = "PM_TEXT"
        await asyncio.sleep(1.5)
        if variable not in heroku_var:
        	return await jep.edit("**โพโุนูุฐุฑุงู .. ููุงุฑ {} ุบูุฑ ููุฌูุฏ ุงุตููุงู...**".format(input_str))

        await jep.edit("**โพโุชู ุญูุฐู {} ุจูุฌูุงุญ โ๏ธ**\n**โพโุงููุชุบููุฑ ุงููุญูุฐูู : โถ**\n `{}` \n**โพโูุชู ุงูุงู ุงุนูุงุฏุฉ ุชุดุบููู ุจููุช ุฌูุจุซูู ูุณุชุบูุฑู ุงูุงูุฑ 2-1 ุฏููููู โฌโญ ...**".format(input_str, heroku_var[variable]))
        del heroku_var[variable]

    elif input_str == "ุตูุฑุฉ ุงููุญุต" or input_str == "ุตูุฑู ุงููุญุต":
        variable = "ALIVE_PIC"
        await asyncio.sleep(1.5)
        if variable not in heroku_var:
        	return await jep.edit("**โพโุนูุฐุฑุงู .. ููุงุฑ {} ุบูุฑ ููุฌูุฏ ุงุตููุงู...**".format(input_str))

        await jep.edit("**โพโุชู ุญูุฐู {} ุจูุฌูุงุญ โ๏ธ**\n**โพโุงููุชุบููุฑ ุงููุญูุฐูู : โถ**\n `{}` \n**โพโูุชู ุงูุงู ุงุนูุงุฏุฉ ุชุดุบููู ุจููุช ุฌูุจุซูู ูุณุชุบูุฑู ุงูุงูุฑ 2-1 ุฏููููู โฌโญ ...**".format(input_str, heroku_var[variable]))
        del heroku_var[variable]

    elif input_str == "ุตูุฑุฉ ุงูุญูุงูุฉ" or input_str == "ุตูุฑู ุงูุญูุงูู":
        variable = "PM_PIC"
        await asyncio.sleep(1.5)
        if variable not in heroku_var:
        	return await jep.edit("**โพโุนูุฐุฑุงู .. ููุงุฑ {} ุบูุฑ ููุฌูุฏ ุงุตููุงู...**".format(input_str))

        await jep.edit("**โพโุชู ุญูุฐู {} ุจูุฌูุงุญ โ๏ธ**\n**โพโุงููุชุบููุฑ ุงููุญูุฐูู : โถ**\n `{}` \n**โพโูุชู ุงูุงู ุงุนูุงุฏุฉ ุชุดุบููู ุจููุช ุฌูุจุซูู ูุณุชุบูุฑู ุงูุงูุฑ 2-1 ุฏููููู โฌโญ ...**".format(input_str, heroku_var[variable]))
        del heroku_var[variable]

    elif input_str == "ุตูุฑุฉ ุงูููุชู" or input_str == "ุตูุฑู ุงูููุชู":
        variable = "DIGITAL_PIC"
        await asyncio.sleep(1.5)
        if variable not in heroku_var:
        	return await jep.edit("**โพโุนูุฐุฑุงู .. ููุงุฑ {} ุบูุฑ ููุฌูุฏ ุงุตููุงู...**".format(input_str))

        await jep.edit("**โพโุชู ุญูุฐู {} ุจูุฌูุงุญ โ๏ธ**\n**โพโุงููุชุบููุฑ ุงููุญูุฐูู : โถ**\n `{}` \n**โพโูุชู ุงูุงู ุงุนูุงุฏุฉ ุชุดุบููู ุจููุช ุฌูุจุซูู ูุณุชุบูุฑู ุงูุงูุฑ 2-1 ุฏููููู โฌโญ ...**".format(input_str, heroku_var[variable]))
        del heroku_var[variable]

    elif input_str == "ุฑูุฒ ุงูููุชู" or input_str == "ุฑูุฒ ุงูุงุณู ุงูููุชู":
        variable = "TIME_JEP"
        await asyncio.sleep(1.5)
        if variable not in heroku_var:
        	return await jep.edit("**โพโุนูุฐุฑุงู .. ููุงุฑ {} ุบูุฑ ููุฌูุฏ ุงุตููุงู...**".format(input_str))

        await jep.edit("**โพโุชู ุญูุฐู {} ุจูุฌูุงุญ โ๏ธ**\n**โพโุงููุชุบููุฑ ุงููุญูุฐูู : โถ**\n `{}` \n**โพโูุชู ุงูุงู ุงุนูุงุฏุฉ ุชุดุบููู ุจููุช ุฌูุจุซูู ูุณุชุบูุฑู ุงูุงูุฑ 2-1 ุฏููููู โฌโญ ...**".format(input_str, heroku_var[variable]))
        del heroku_var[variable]

    elif input_str == "ุฒุฎุฑูู ุงูููุชู" or input_str == "ุฒุฎุฑูุฉ ุงูููุชู":
        variable = "JP_FN"
        await asyncio.sleep(1.5)
        if variable not in heroku_var:
        	return await jep.edit("**โพโุนูุฐุฑุงู .. ููุงุฑ {} ุบูุฑ ููุฌูุฏ ุงุตููุงู...**".format(input_str))

        await jep.edit("**โพโุชู ุญูุฐู {} ุจูุฌูุงุญ โ๏ธ**\n**โพโุงููุชุบููุฑ ุงููุญูุฐูู : โถ**\n `{}` \n**โพโูุชู ุงูุงู ุงุนูุงุฏุฉ ุชุดุบููู ุจููุช ุฌูุจุซูู ูุณุชุบูุฑู ุงูุงูุฑ 2-1 ุฏููููู โฌโญ ...**".format(input_str, heroku_var[variable]))
        del heroku_var[variable]

    elif input_str == "ุงูุจุงูู" or input_str == "ุงูุจุงูู ุงูููุชู" or input_str == "ุงููุจุฐู ุงูููุชูู":
        variable = "DEFAULT_BIO"
        await asyncio.sleep(1.5)
        if variable not in heroku_var:
        	return await jep.edit("**โพโุนูุฐุฑุงู .. ููุงุฑ {} ุบูุฑ ููุฌูุฏ ุงุตููุงู...**".format(input_str))

        await jep.edit("**โพโุชู ุญูุฐู {} ุจูุฌูุงุญ โ๏ธ**\n**โพโุงููุชุบููุฑ ุงููุญูุฐูู : โถ**\n `{}` \n**โพโูุชู ุงูุงู ุงุนูุงุฏุฉ ุชุดุบููู ุจููุช ุฌูุจุซูู ูุณุชุบูุฑู ุงูุงูุฑ 2-1 ุฏููููู โฌโญ ...**".format(input_str, heroku_var[variable]))
        del heroku_var[variable]

    elif input_str == "ุงุณู ุงููุณุชุฎุฏู" or input_str == "ุงูุงุณู":
        variable = "ALIVE_NAME"
        await asyncio.sleep(1.5)
        if variable not in heroku_var:
        	return await jep.edit("**โพโุนูุฐุฑุงู .. ููุงุฑ {} ุบูุฑ ููุฌูุฏ ุงุตููุงู...**".format(input_str))

        await jep.edit("**โพโุชู ุญูุฐู {} ุจูุฌูุงุญ โ๏ธ**\n**โพโุงููุชุบููุฑ ุงููุญูุฐูู : โถ**\n `{}` \n**โพโูุชู ุงูุงู ุงุนูุงุฏุฉ ุชุดุบููู ุจููุช ุฌูุจุซูู ูุณุชุบูุฑู ุงูุงูุฑ 2-1 ุฏููููู โฌโญ ...**".format(input_str, heroku_var[variable]))
        del heroku_var[variable]

    elif input_str == "ูุฑูุจ ุงูุฑุณุงุฆู" or input_str == "ูุฑูุจ ุงูุชุฎุฒูู" or input_str == "ูุฑูุจ ุงูุฎุงุต":
        variable = "PM_LOGGER_GROUP_ID"
        await asyncio.sleep(1.5)
        if variable not in heroku_var:
        	return await jep.edit("**โพโุนูุฐุฑุงู .. ููุงุฑ {} ุบูุฑ ููุฌูุฏ ุงุตููุงู...**".format(input_str))

        await jep.edit("**โพโุชู ุญูุฐู {} ุจูุฌูุงุญ โ๏ธ**\n**โพโุงููุชุบููุฑ ุงููุญูุฐูู : โถ**\n `{}` \n**โพโูุชู ุงูุงู ุงุนูุงุฏุฉ ุชุดุบููู ุจููุช ุฌูุจุซูู ูุณุชุบูุฑู ุงูุงูุฑ 2-1 ุฏููููู โฌโญ ...**".format(input_str, heroku_var[variable]))
        del heroku_var[variable]

    elif input_str == "ุงูุณุฌู" or input_str == "ูุฑูุจ ุงูุณุฌู":
        variable = "PRIVATE_GROUP_BOT_API_ID"
        await asyncio.sleep(1.5)
        if variable not in heroku_var:
        	return await jep.edit("**โพโุนูุฐุฑุงู .. ููุงุฑ {} ุบูุฑ ููุฌูุฏ ุงุตููุงู...**".format(input_str))

        await jep.edit("**โพโุชู ุญูุฐู {} ุจูุฌูุงุญ โ๏ธ**\n**โพโุงููุชุบููุฑ ุงููุญูุฐูู : โถ**\n `{}` \n**โพโูุชู ุงูุงู ุงุนูุงุฏุฉ ุชุดุบููู ุจููุช ุฌูุจุซูู ูุณุชุบูุฑู ุงูุงูุฑ 2-1 ุฏููููู โฌโญ ...**".format(input_str, heroku_var[variable]))
        del heroku_var[variable]

    elif input_str == "ุงูุชููู" or input_str == "ุชููู ุงูุจูุช":
        variable = "TG_BOT_TOKEN"
        await asyncio.sleep(1.5)
        if variable not in heroku_var:
        	return await jep.edit("**โพโุนูุฐุฑุงู .. ููุงุฑ {} ุบูุฑ ููุฌูุฏ ุงุตููุงู...**".format(input_str))

        await jep.edit("**โพโุชู ุญูุฐู {} ุจูุฌูุงุญ โ๏ธ**\n**โพโุงููุชุบููุฑ ุงููุญูุฐูู : โถ**\n `{}` \n**โพโูุชู ุงูุงู ุงุนูุงุฏุฉ ุชุดุบููู ุจููุช ุฌูุจุซูู ูุณุชุบูุฑู ุงูุงูุฑ 2-1 ุฏููููู โฌโญ ...**".format(input_str, heroku_var[variable]))
        del heroku_var[variable]

    elif input_str == "ูุนุฑู ุงูุจูุช" or input_str == "ูุนุฑู ุจูุช":
        variable = "TG_BOT_USERNAME"
        await asyncio.sleep(1.5)
        if variable not in heroku_var:
        	return await jep.edit("**โพโุนูุฐุฑุงู .. ููุงุฑ {} ุบูุฑ ููุฌูุฏ ุงุตููุงู...**".format(input_str))

        await jep.edit("**โพโุชู ุญูุฐู {} ุจูุฌูุงุญ โ๏ธ**\n**โพโุงููุชุบููุฑ ุงููุญูุฐูู : โถ**\n `{}` \n**โพโูุชู ุงูุงู ุงุนูุงุฏุฉ ุชุดุบููู ุจููุช ุฌูุจุซูู ูุณุชุบูุฑู ุงูุงูุฑ 2-1 ุฏููููู โฌโญ ...**".format(input_str, heroku_var[variable]))
        del heroku_var[variable]

    elif input_str == "ุงูุฑูุจู" or input_str == "ุงูุณูุฑุณ":
        variable = "UPSTREAM_REPO"
        await asyncio.sleep(1.5)
        if variable not in heroku_var:
        	return await jep.edit("**โพโุนูุฐุฑุงู .. ููุงุฑ {} ุบูุฑ ููุฌูุฏ ุงุตููุงู...**".format(input_str))

        await jep.edit("**โพโุชู ุญูุฐู {} ุจูุฌูุงุญ โ๏ธ**\n**โพโุงููุชุบููุฑ ุงููุญูุฐูู : โถ**\n `{}` \n**โพโูุชู ุงูุงู ุงุนูุงุฏุฉ ุชุดุบููู ุจููุช ุฌูุจุซูู ูุณุชุบูุฑู ุงูุงูุฑ 2-1 ุฏููููู โฌโญ ...**".format(input_str, heroku_var[variable]))
        del heroku_var[variable]

    elif input_str == "ุงุณูู ุงูุชููุงุฆู" or input_str == "ุงูุงุณู ุงูุชููุงุงุฆู":
        variable = "AUTONAME"
        await asyncio.sleep(1.5)
        if variable not in heroku_var:
        	return await jep.edit("**โพโุนูุฐุฑุงู .. ููุงุฑ {} ุบูุฑ ููุฌูุฏ ุงุตููุงู...**".format(input_str))

        await jep.edit("**โพโุชู ุญูุฐู {} ุจูุฌูุงุญ โ๏ธ**\n**โพโุงููุชุบููุฑ ุงููุญูุฐูู : โถ**\n `{}` \n**โพโูุชู ุงูุงู ุงุนูุงุฏุฉ ุชุดุบููู ุจููุช ุฌูุจุซูู ูุณุชุบูุฑู ุงูุงูุฑ 2-1 ุฏููููู โฌโญ ...**".format(input_str, heroku_var[variable]))
        del heroku_var[variable]

    elif input_str == "ุงููุทูุฑ" or input_str == "ุงููุทูุฑูู":
        variable = "SUDO_USERS"
        await asyncio.sleep(1.5)
        if variable not in heroku_var:
        	return await jep.edit("**โพโุนูุฐุฑุงู .. ููุงุฑ {} ุบูุฑ ููุฌูุฏ ุงุตููุงู...**".format(input_str))

        await jep.edit("**โพโุชู ุญูุฐู {} ุจูุฌูุงุญ โ๏ธ**\n**โพโุงููุชุบููุฑ ุงููุญูุฐูู : โถ**\n `{}` \n**โพโูุชู ุงูุงู ุงุนูุงุฏุฉ ุชุดุบููู ุจููุช ุฌูุจุซูู ูุณุชุบูุฑู ุงูุงูุฑ 2-1 ุฏููููู โฌโญ ...**".format(input_str, heroku_var[variable]))
        del heroku_var[variable]

    elif input_str == "ุฑุณุงุฆู ุงูุญูุงูุฉ" or input_str == "ุฑุณุงุฆู ุงูุญูุงูู" or input_str == "ุฑุณุงุฆู ุงูุฎุงุต" or input_str == "ุฑุณุงุฆู ุญูุงูุฉ ุงูุฎุงุต":
        variable = "MAX_FLOOD_IN_PMS"
        await asyncio.sleep(1.5)
        if variable not in heroku_var:
        	return await jep.edit("**โพโุนูุฐุฑุงู .. ููุงุฑ {} ุบูุฑ ููุฌูุฏ ุงุตููุงู...**".format(input_str))

        await jep.edit("**โพโุชู ุญูุฐู {} ุจูุฌูุงุญ โ๏ธ**\n**โพโุงููุชุบููุฑ ุงููุญูุฐูู : โถ**\n `{}` \n**โพโูุชู ุงูุงู ุงุนูุงุฏุฉ ุชุดุบููู ุจููุช ุฌูุจุซูู ูุณุชุบูุฑู ุงูุงูุฑ 2-1 ุฏููููู โฌโญ ...**".format(input_str, heroku_var[variable]))
        del heroku_var[variable]
    else:
        if input_str:
            return await jep.edit("**โพโุนูุฐุฑุงู .. ูุงููุฌูุฏ ููุงูู ููุงุฑ ุจุฅุณูู {} ุ!..**".format(input_str))

        return await edit_or_reply(event, "**โพโุนูุฐุฑุงู .. ูุงููุฌูุฏ ููุงูู ููุงุฑ ุจุฅุณูู {} ุ!..**".format(input_str))


# Copyright (C) 2022 jepthon . All Rights Reserved
@zedthon.on(zelzal_cmd(pattern="ุฌูุจ(?:\s|$)([\s\S]*)"))
@zedthon.on(sudo_cmd(pattern="ุฌูุจ(?:\s|$)([\s\S]*)", allow_sudo=True))
async def variable(event):
    if Config.HEROKU_API_KEY is None:
        return await edit(
            event,
            "โพโุงุถุจุท Var ุงููุทููุจ ูู Heroku ุนูู ูุธููุฉ ูุฐุง ุจุดูู ุทุจูุนู `HEROKU_API_KEY` ุงุฐุง ููุช ูุงุชุนูู ุงูู ููุฌุฏ ููุท ุงุฐูุจ ุงูู ุญุณุงุจู ูู ููุฑููู ุซู ุงูู ุงูุงุนุฏุงุฏุงุช ุณุชุฌุฏู ุจุงูุงุณูู ุงูุณุฎู ูุฏุฎูู ูู ุงููุงุฑ. ",
        )
    if Config.HEROKU_APP_NAME is not None:
        app = Heroku.app(Config.HEROKU_APP_NAME)
    else:
        return await edit(
            event,
            "โพโุงุถุจุท Var ุงููุทููุจ ูู Heroku ุนูู ูุธููุฉ ูุฐุง ุจุดูู ุทุจูุนู `HEROKU_APP_NAME` ุงุณู ุงูุชุทุจูู ุงุฐุง ููุช ูุงุชุนูู.",
        )
    input_str = event.text[5:]
    heroku_var = app.config()
    jep = await edit_or_reply(event, "**โพโุฌูุงุฑู ุฌููุจ ุงูููุงุฑ ููู ุจููุชู ๐...**")
    if input_str == "ุฑูุฒ ุงูููุชู" or input_str == "ุฑูุฒ ุงูุงุณู ุงูููุชู":
        variable = "TIME_JEP"
        await asyncio.sleep(1.5)
        if variable in heroku_var:
            await jep.edit("**โพโุงูููุงุฑ {} ููุฌููุฏ โ๏ธ**\n**โพโุงููุชุบููุฑ : โถ**\n `{}` \n**โพโูููุงุฉ ุงูุณููุฑุณ : @jepthon**".format(input_str, heroku_var[variable]))
        else:
            await jep.edit("**โพโ ุงูููุงุฑ {} ุบููุฑ ููุฌููุฏ โ** \n**โพโุงููุชุบููุฑ :**\n `{}` \n**โพโูููุงุฉ ุงูุณููุฑุณ : @jepthon**".format(input_str, heroku_var[variable]))
 
    elif input_str == "ุฒุฎุฑูู ุงูููุชู" or input_str == "ุฒุฎุฑูุฉ ุงูููุชู":
        variable = "JP_FN"
        await asyncio.sleep(1.5)
        if variable in heroku_var:
            await jep.edit("**โพโุงูููุงุฑ {} ููุฌููุฏ โ๏ธ**\n**โพโุงููุชุบููุฑ : โถ**\n `{}` \n**โพโูููุงุฉ ุงูุณููุฑุณ : @jepthon**".format(input_str, heroku_var[variable]))
        else:
            await jep.edit("**โพโ ุงูููุงุฑ {} ุบููุฑ ููุฌููุฏ โ** \n**โพโุงููุชุบููุฑ :**\n `{}` \n**โพโูููุงุฉ ุงูุณููุฑุณ : @jepthon**".format(input_str, heroku_var[variable]))
 
    elif input_str == "ุงูููุช" or input_str == "ุงูุณุงุนู":
        variable = "TZ"
        await asyncio.sleep(1.5)
        if variable in heroku_var:
            await jep.edit("**โพโุชู ุชุบููุฑ ุงูููุทููุฉ ุงูุฒููููู**\n **โพโุงููุชุบูุฑ : ุฏูููุฉ ูุตูุฑ ๐ช๐ฌ**\n\n**โพโูููุงุฉ ุงูุณููุฑุณ : @jepthon**")
        else:
            await jep.edit("**โพโุชู ุงุนูุงุฏุฉ ุชุบููุฑ ุงูููุทููุฉ ุงูุฒููููู**\n **โพโุงููุชุบูุฑ : ุฏูููุฉ ูุตูุฑ ๐ช๐ฌ**\n\n**โพโูููุงุฉ ุงูุณููุฑุณ : @jepthon**")
        heroku_var[variable] = "Africa/Cairo"
    elif input_str == "ุงูุจุงูู" or input_str == "ุงูุจุงูู ุงูููุชู" or input_str == "ุงููุจุฐู":
        variable = "DEFAULT_BIO"
        await asyncio.sleep(1.5)
        if variable in heroku_var:
            await jep.edit("**โพโุงูููุงุฑ {} ููุฌููุฏ โ๏ธ**\n**โพโุงููุชุบููุฑ : โถ**\n `{}` \n**โพโูููุงุฉ ุงูุณููุฑุณ : @jepthon**".format(input_str, heroku_var[variable]))
        else:
            await jep.edit("**โพโ ุงูููุงุฑ {} ุบููุฑ ููุฌููุฏ โ** \n**โพโุงููุชุบููุฑ :**\n `{}` \n**โพโูููุงุฉ ุงูุณููุฑุณ : @jepthon**".format(input_str, heroku_var[variable]))
 
    elif input_str == "ุงุณู ุงููุณุชุฎุฏู" or input_str == "ุงูุงุณู":
        variable = "ALIVE_NAME"
        await asyncio.sleep(1.5)
        if variable in heroku_var:
            await jep.edit("**โพโุงูููุงุฑ {} ููุฌููุฏ โ๏ธ**\n**โพโุงููุชุบููุฑ : โถ**\n `{}` \n**โพโูููุงุฉ ุงูุณููุฑุณ : @jepthon**".format(input_str, heroku_var[variable]))
        else:
            await jep.edit("**โพโ ุงูููุงุฑ {} ุบููุฑ ููุฌููุฏ โ** \n**โพโุงููุชุบููุฑ :**\n `{}` \n**โพโูููุงุฉ ุงูุณููุฑุณ : @jepthon**".format(input_str, heroku_var[variable]))
 
    elif input_str == "ูุฑูุจ ุงูุฑุณุงุฆู" or input_str == "ูุฑูุจ ุงูุชุฎุฒูู" or input_str == "ูุฑูุจ ุงูุฎุงุต":
        variable = "PM_LOGGER_GROUP_ID"
        await asyncio.sleep(1.5)
        if variable in heroku_var:
            await jep.edit("**โพโุงูููุงุฑ {} ููุฌููุฏ โ๏ธ**\n**โพโุงููุชุบููุฑ : โถ**\n `{}` \n**โพโูููุงุฉ ุงูุณููุฑุณ : @jepthon**".format(input_str, heroku_var[variable]))
        else:
            await jep.edit("**โพโ ุงูููุงุฑ {} ุบููุฑ ููุฌููุฏ โ** \n**โพโุงููุชุบููุฑ :**\n `{}` \n**โพโูููุงุฉ ุงูุณููุฑุณ : @jepthon**".format(input_str, heroku_var[variable]))
 
    elif input_str == "ุงูุณุฌู" or input_str == "ูุฑูุจ ุงูุณุฌู":
        variable = "PRIVATE_GROUP_BOT_API_ID"
        await asyncio.sleep(1.5)
        if variable in heroku_var:
            await jep.edit("**โพโุงูููุงุฑ {} ููุฌููุฏ โ๏ธ**\n**โพโุงููุชุบููุฑ : โถ**\n `{}` \n**โพโูููุงุฉ ุงูุณููุฑุณ : @jepthon**".format(input_str, heroku_var[variable]))
        else:
            await jep.edit("**โพโ ุงูููุงุฑ {} ุบููุฑ ููุฌููุฏ โ** \n**โพโุงููุชุบููุฑ :**\n `{}` \n**โพโูููุงุฉ ุงูุณููุฑุณ : @jepthon**".format(input_str, heroku_var[variable]))
 
    elif input_str == "ุงูุชููู" or input_str == "ุชููู ุงูุจูุช":
        variable = "TG_BOT_TOKEN"
        await asyncio.sleep(1.5)
        if variable in heroku_var:
            await jep.edit("**โพโุงูููุงุฑ {} ููุฌููุฏ โ๏ธ**\n**โพโุงููุชุบููุฑ : โถ**\n `{}` \n**โพโูููุงุฉ ุงูุณููุฑุณ : @jepthon**".format(input_str, heroku_var[variable]))
        else:
            await jep.edit("**โพโ ุงูููุงุฑ {} ุบููุฑ ููุฌููุฏ โ** \n**โพโุงููุชุบููุฑ :**\n `{}` \n**โพโูููุงุฉ ุงูุณููุฑุณ : @jepthon**".format(input_str, heroku_var[variable]))
 
    elif input_str == "ูุนุฑู ุงูุจูุช" or input_str == "ูุนุฑู ุจูุช":
        variable = "TG_BOT_USERNAME"
        await asyncio.sleep(1.5)
        if variable in heroku_var:
            await jep.edit("**โพโุงูููุงุฑ {} ููุฌููุฏ โ๏ธ**\n**โพโุงููุชุบููุฑ : โถ**\n `{}` \n**โพโูููุงุฉ ุงูุณููุฑุณ : @jepthon**".format(input_str, heroku_var[variable]))
        else:
            await jep.edit("**โพโ ุงูููุงุฑ {} ุบููุฑ ููุฌููุฏ โ** \n**โพโุงููุชุบููุฑ :**\n `{}` \n**โพโูููุงุฉ ุงูุณููุฑุณ : @jepthon**".format(input_str, heroku_var[variable]))
 
    elif input_str == "ุงูุฑูุจู" or input_str == "ุงูุณูุฑุณ":
        variable = "UPSTREAM_REPO"
        await asyncio.sleep(1.5)
        if variable in heroku_var:
            await jep.edit("**โพโุงูููุงุฑ {} ููุฌููุฏ โ๏ธ**\n**โพโุงููุชุบููุฑ : โถ**\n `{}` \n**โพโูููุงุฉ ุงูุณููุฑุณ : @jepthon**".format(input_str, heroku_var[variable]))
        else:
            await jep.edit("**โพโ ุงูููุงุฑ {} ุบููุฑ ููุฌููุฏ โ** \n**โพโุงููุชุบููุฑ :**\n `{}` \n**โพโูููุงุฉ ุงูุณููุฑุณ : @jepthon**".format(input_str, heroku_var[variable]))

    elif input_str == "ุงุณูู ุงูุชููุงุฆู" or input_str == "ุงูุงุณู ุงูุชููุงุงุฆู":
        variable = "AUTONAME"
        await asyncio.sleep(1.5)
        if variable in heroku_var:
            await jep.edit("**โพโุงูููุงุฑ {} ููุฌููุฏ โ๏ธ**\n**โพโุงููุชุบููุฑ : โถ**\n `{}` \n**โพโูููุงุฉ ุงูุณููุฑุณ : @jepthon**".format(input_str, heroku_var[variable]))
        else:
            await jep.edit("**โพโ ุงูููุงุฑ {} ุบููุฑ ููุฌููุฏ โ** \n**โพโุงููุชุบููุฑ :**\n `{}` \n**โพโูููุงุฉ ุงูุณููุฑุณ : @jepthon**".format(input_str, heroku_var[variable]))

    elif input_str == "ุงููุทูุฑ" or input_str == "ุงููุทูุฑูู":
        variable = "SUDO_USERS"
        await asyncio.sleep(1.5)
        if variable in heroku_var:
            await jep.edit("**โพโุงููุทููุฑ {} ููุฌููุฏ ๐ง๐ปโ๐ปโ๏ธ**\n**โพโุงูุฏู ุงููุทููุฑ : โถ**\n `{}` \n**โพโูููุงุฉ ุงูุณููุฑุณ : @jepthon**".format(input_str, heroku_var[variable]))
        else:
            await jep.edit("**โพโ ุงููุทููุฑ {} ุบููุฑ ููุฌููุฏ ๐ง๐ปโ๐ปโ** \n**โพโุงููุชุบููุฑ :**\n `{}` \n**โพโูููุงุฉ ุงูุณููุฑุณ : @jepthon**".format(input_str, heroku_var[variable]))

    elif input_str == "ุฑุณุงุฆู ุงูุญูุงูุฉ" or input_str == "ุฑุณุงุฆู ุงูุญูุงูู" or input_str == "ุฑุณุงุฆู ุงูุฎุงุต" or input_str == "ุฑุณุงุฆู ุญูุงูุฉ ุงูุฎุงุต":
        variable = "MAX_FLOOD_IN_PMS"
        await asyncio.sleep(1.5)
        if variable in heroku_var:
            await jep.edit("**โพโุงูููุงุฑ {} ููุฌููุฏ โ๏ธ**\n**โพโุงููุชุบููุฑ : โถ**\n `{}` \n**โพโูููุงุฉ ุงูุณููุฑุณ : @jepthon**".format(input_str, heroku_var[variable]))
        else:
            await jep.edit("**โพโ ุงูููุงุฑ {} ุบููุฑ ููุฌููุฏ โ** \n**โพโุงููุชุบููุฑ :**\n `{}` \n**โพโูููุงุฉ ุงูุณููุฑุณ : @jepthon**".format(input_str, heroku_var[variable]))

    else:
        if input_str:
            return await jep.edit("**โพโุนูุฐุฑุงู .. ูุงููุฌูุฏ ููุงูู ููุงุฑ ุจุฅุณูู {} ุ!..**".format(input_str))

        return await edit_or_reply(event, "**โพโุนูุฐุฑุงู .. ูุงููุฌูุฏ ููุงูู ููุงุฑ ุจุฅุณูู {} ุ!..**".format(input_str))

@jmthon.on(
    jmthon.ar(
       pattern="ุงุถู ุตูุฑุฉ (ุงูุญูุงูุฉ|ุงูุญูุงูู|ุงููุญุต|ุงูููุชู) ?(.*)"
    )
)
@jmthon.on(sudo_cmd(pattern="ุงุถู ุตูุฑุฉ (ุงูุญูุงูุฉ|ุงูุญูุงูู|ุงููุญุต|ุงูููุชู) ?(.*)", allow_sudo=True))
async def _(tosh):
    if tosh.fwd_from:
        return
    if Config.HEROKU_API_KEY is None:
        return await edit(
            var,
            "โพโุงุถุจุท Var ุงููุทููุจ ูู Heroku ุนูู ูุธููุฉ ูุฐุง ุจุดูู ุทุจูุนู `HEROKU_API_KEY` ุงุฐุง ููุช ูุงุชุนูู ุงูู ููุฌุฏ ููุท ุงุฐูุจ ุงูู ุญุณุงุจู ูู ููุฑููู ุซู ุงูู ุงูุงุนุฏุงุฏุงุช ุณุชุฌุฏู ุจุงูุงุณูู ุงูุณุฎู ูุฏุฎูู ูู ุงููุงุฑ. ",
        )
    if Config.HEROKU_APP_NAME is not None:
        app = Heroku.app(Config.HEROKU_APP_NAME)
    else:
        return await edit(
            var,
            "โพโุงุถุจุท Var ุงููุทููุจ ูู Heroku ุนูู ูุธููุฉ ูุฐุง ุจุดูู ุทุจูุนู `HEROKU_APP_NAME` ุงุณู ุงูุชุทุจูู ุงุฐุง ููุช ูุงุชุนูู.",
        )
    heroku_var = app.config()
    jep = await edit_or_reply(tosh, "**โพโุฌูุงุฑู ุงุถูุงูุฉ ููุงุฑ ุงูุตููุฑุฉ ุงููู ุจููุชู ...**")
    if not os.path.isdir(Config.TEMP_DIR):
        os.makedirs(Config.TEMP_DIR)
        #     if BOTLOG:
        await tosh.client.send_message(
            BOTLOG_CHATID,
            "**โพโุชู ุฅูุดุงุก ุญุณุงุจ Telegraph ุฌุฏูุฏ {} ููุฏูุฑุฉ ุงูุญุงููุฉโโ** \n**โพโูุง ุชุนุทู ุนููุงู url ูุฐุง ูุฃู ุดุฎุต**".format(
                auth_url
            ),
        )
    optional_title = tosh.pattern_match.group(2)
    if tosh.reply_to_msg_id:
        start = datetime.now()
        r_message = await tosh.get_reply_message()
        input_str = tosh.pattern_match.group(1)
        if input_str in ["ุงูุญูุงูุฉ", "ุงูุญูุงูู"]:
            downloaded_file_name = await tosh.client.download_media(
                r_message, Config.TEMP_DIR
            )
            end = datetime.now()
            ms = (end - start).seconds
            await jep.edit(
                f"**โพโุชู ุชุญููู {downloaded_file_name} ูู ููุช {ms} ุซุงููู.**"
            )
            if downloaded_file_name.endswith((".webp")):
                resize_image(downloaded_file_name)
            try:
                start = datetime.now()
                media_urls = upload_file(downloaded_file_name)
            except exceptions.TelegraphException as exc:
                await jep.edit("**โพโุฎุทุง : **" + str(exc))
                os.remove(downloaded_file_name)
            else:
                end = datetime.now()
                ms_two = (end - start).seconds
                os.remove(downloaded_file_name)
                vinfo = ("https://telegra.ph{}".format(media_urls[0]))
                heroku_var["PMPERMIT_PIC"] = vinfo
                await jep.edit("**โพโุชู ุชุบูููุฑ ุตููุฑุฉ {} .. ุจูุฌูุงุญ โ๏ธ**\n**โพโุงููุชุบููุฑ : โถ**\n `{}` \n**โพโูุชู ุงูุงู ุงุนูุงุฏุฉ ุชุดุบููู ุจููุช ุฒุฏ ุซููู ูุณุชุบูุฑู ุงูุงูุฑ 2-1 ุฏููููู โฌโญ ...**".format(input_str, vinfo))
        elif input_str in ["ุงููุญุต", "ุงูุณูุฑุณ"]:
            downloaded_file_name = await tosh.client.download_media(
                r_message, Config.TEMP_DIR
            )
            end = datetime.now()
            ms = (end - start).seconds
            await jep.edit(
                f"**โพโุชู ุชุญููู {downloaded_file_name} ูู ููุช {ms} ุซุงููู.**"
            )
            if downloaded_file_name.endswith((".webp")):
                resize_image(downloaded_file_name)
            try:
                start = datetime.now()
                media_urls = upload_file(downloaded_file_name)
            except exceptions.TelegraphException as exc:
                await jep.edit("**โพโุฎุทุง : **" + str(exc))
                os.remove(downloaded_file_name)
            else:
                end = datetime.now()
                ms_two = (end - start).seconds
                os.remove(downloaded_file_name)
                vinfo = ("https://telegra.ph{}".format(media_urls[0]))
                heroku_var["ALIVE_PIC"] = vinfo
                await jep.edit("**โพโุชู ุชุบูููุฑ ุตููุฑุฉ {} .. ุจูุฌูุงุญ โ๏ธ**\n**โพโุงููุชุบููุฑ : โถ**\n `{}` \n**โพโูุชู ุงูุงู ุงุนูุงุฏุฉ ุชุดุบููู ุจููุช ุฒุฏ ุซููู ูุณุชุบูุฑู ุงูุงูุฑ 2-1 ุฏููููู โฌโญ ...**".format(input_str, vinfo))
        elif input_str in ["ุงูููุชู", "ุงูุจุฑููุงูู"]:
            downloaded_file_name = await tosh.client.download_media(
                r_message, Config.TEMP_DIR
            )
            end = datetime.now()
            ms = (end - start).seconds
            await jep.edit(
                f"**โพโุชู ุชุญููู {downloaded_file_name} ูู ููุช {ms} ุซุงููู.**"
            )
            if downloaded_file_name.endswith((".webp")):
                resize_image(downloaded_file_name)
            try:
                start = datetime.now()
                media_urls = upload_file(downloaded_file_name)
            except exceptions.TelegraphException as exc:
                await jep.edit("**โพโุฎุทุง : **" + str(exc))
                os.remove(downloaded_file_name)
            else:
                end = datetime.now()
                ms_two = (end - start).seconds
                os.remove(downloaded_file_name)
                vinfo = ("https://telegra.ph{}".format(media_urls[0]))
                heroku_var["DIGITAL_PIC"] = vinfo
                await jep.edit("**โพโุชู ุชุบูููุฑ ุตููุฑุฉ {} .. ุจูุฌูุงุญ โ๏ธ**\n**โพโุงููุชุบููุฑ : โถ**\n `{}` \n**โพโูุชู ุงูุงู ุงุนูุงุฏุฉ ุชุดุบููู ุจููุช ุฒุฏ ุซููู ูุณุชุบูุฑู ุงูุงูุฑ 2-1 ุฏููููู โฌโญ ...**".format(input_str, vinfo))


    else:
        await jep.edit(
            "**โพโุจุงููุฑุฏ ุน ุตููุฑุฉ ูุชุนูููู ุงูููุงุฑ ...**",
        )


def resize_image(image):
    im = Image.open(image)
    im.save(image, "PNG")



# Copyright (C) 2022 Jepthon . All Rights Reserved
@jmthon.on(admin_cmd(pattern="ุงูุงูุฑ ุงููุงุฑุงุช"))
@jmthon.on(sudo_cmd(pattern="ุงูุงูุฑ ุงููุงุฑุงุช", allow_sudo=True))
async def cmd(jepthonn):
    await edit_or_reply(jepthonn, jepthonnn)
